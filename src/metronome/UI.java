package metronome;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;

public class UI {

    public UI(Metronome metronome) {
        _metronome = metronome;

        startStopCheckBox.addActionListener((ActionEvent e) -> {
            if (startStopCheckBox.isSelected()) {
                _metronome.start();
                startStopCheckBox.setText("Stop");
            } else {
                _metronome.stop();
                startStopCheckBox.setText("Start");
            }
        });
        speedSlider.addChangeListener((ChangeEvent e) -> {
            int bpm = speedSlider.getValue();
            speedText.setText(Long.toString(bpm));

            if (!speedSlider.getValueIsAdjusting()) {
                _metronome.setBpm(bpm);
            }
        });
        speedText.addActionListener((ActionEvent e) -> {
            long bpm = Long.parseLong(speedText.getText());
            speedSlider.setValue((int) bpm);
            _metronome.setBpm(bpm);
        });
        soundComboBox.addItemListener((ItemEvent e) -> {
            PercussionSound sound = (PercussionSound) soundComboBox.getSelectedItem();
            if (sound != null) {
                _metronome.setSound(sound);
            }
        });

        initUiStatus();
    }

    private void initUiStatus() {
        soundComboBox.setModel(new DefaultComboBoxModel<>(_metronome.getSoundList()) {
        });
        soundComboBox.setSelectedItem(_metronome.getSound());
        speedSlider.setValue((int) _metronome.getBpm());
        speedText.setText(Long.toString(_metronome.getBpm()));
    }

    JPanel getPanel() {
        return panel;
    }

    private final Metronome _metronome;

    private JComboBox<PercussionSound> soundComboBox;
    private JPanel panel;
    private JTextField speedText;
    private JSlider speedSlider;
    private JCheckBox startStopCheckBox;
    private JLabel soundLabel;
    private JLabel speedLabel;
    private JLabel bpmLabel;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 4, new Insets(20, 20, 20, 20), -1, -1));
        speedSlider = new JSlider();
        speedSlider.setMajorTickSpacing(10);
        speedSlider.setMaximum(180);
        speedSlider.setMinimum(30);
        speedSlider.setPaintLabels(false);
        speedSlider.setPaintTicks(false);
        speedSlider.setToolTipText("select tempo");
        panel.add(speedSlider, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        speedLabel = new JLabel();
        speedLabel.setText("Speed");
        panel.add(speedLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        startStopCheckBox = new JCheckBox();
        startStopCheckBox.setText("Start");
        panel.add(startStopCheckBox, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        speedText = new JTextField();
        speedText.setEditable(true);
        panel.add(speedText, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        soundComboBox = new JComboBox();
        soundComboBox.setEditable(false);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        soundComboBox.setModel(defaultComboBoxModel1);
        panel.add(soundComboBox, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        soundLabel = new JLabel();
        soundLabel.setText("Sound");
        panel.add(soundLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bpmLabel = new JLabel();
        bpmLabel.setText("bpm");
        panel.add(bpmLabel, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        soundLabel.setLabelFor(soundComboBox);
        bpmLabel.setLabelFor(speedText);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
